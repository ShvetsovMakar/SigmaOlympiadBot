from aiogram import *
from aiogram.fsm.context import FSMContext

from main_bot.config import *

from core.states import MainSG
from core import keyboards
from core import strings

results_choice_router = Router()


@results_choice_router.message(MainSG.results_choice)
async def choice(message: types.Message, state: FSMContext):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†":
        await bot.send_message(chat_id=message.chat.id,
                               text=strings.main_menu,
                               reply_markup=keyboards.main_menu)

        await state.set_state(MainSG.main_menu)

    elif message.text == "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–µ—Ä–≤–æ–≥–æ —Ç—É—Ä–∞":
        if handling["results1"]:
            pass

        else:
            await bot.send_message(chat_id=message.chat.id,
                                   text="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–µ—Ä–≤–æ–≥–æ —Ç—É—Ä–∞ –µ—â—ë –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã",
                                   reply_markup=keyboards.results_choice)

    elif message.text == "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—Ç–æ—Ä–æ–≥–æ —Ç—É—Ä–∞":
        if handling["results2"]:
            pass

        else:
            await bot.send_message(chat_id=message.chat.id,
                                   text="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—Ç–æ—Ä–æ–≥–æ —Ç—É—Ä–∞ –µ—â—ë –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã",
                                   reply_markup=keyboards.results_choice)

    elif message.text == "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ª–∏–º–ø–∏–∞–¥—ã":
        if handling["results2"]:
            pass

        else:
            await bot.send_message(chat_id=message.chat.id,
                                   text="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ª–∏–º–ø–∏–∞–¥—ã –µ—â—ë –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã",
                                   reply_markup=keyboards.results_choice)

    else:
        await bot.send_message(chat_id=message.chat.id,
                               text=strings.error,
                               reply_markup=keyboards.results_choice)
